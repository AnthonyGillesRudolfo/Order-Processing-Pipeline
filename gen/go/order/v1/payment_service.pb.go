// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: payment_service.proto

package orderpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Payment domain
type ProcessPaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	PaymentMethod *PaymentMethod         `protobuf:"bytes,2,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessPaymentRequest) Reset() {
	*x = ProcessPaymentRequest{}
	mi := &file_payment_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentRequest) ProtoMessage() {}

func (x *ProcessPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentRequest.ProtoReflect.Descriptor instead.
func (*ProcessPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessPaymentRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ProcessPaymentRequest) GetPaymentMethod() *PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

func (x *ProcessPaymentRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ProcessPaymentResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	PaymentId string                 `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Status    PaymentStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=order.sv1.PaymentStatus" json:"status,omitempty"` // from common.proto
	// URL to Xendit's hosted invoice page (if created)
	InvoiceUrl string `protobuf:"bytes,3,opt,name=invoice_url,json=invoiceUrl,proto3" json:"invoice_url,omitempty"`
	// Xendit's invoice id (if created)
	XenditInvoiceId string `protobuf:"bytes,4,opt,name=xendit_invoice_id,json=xenditInvoiceId,proto3" json:"xendit_invoice_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProcessPaymentResponse) Reset() {
	*x = ProcessPaymentResponse{}
	mi := &file_payment_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentResponse) ProtoMessage() {}

func (x *ProcessPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentResponse.ProtoReflect.Descriptor instead.
func (*ProcessPaymentResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessPaymentResponse) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *ProcessPaymentResponse) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_PENDING
}

func (x *ProcessPaymentResponse) GetInvoiceUrl() string {
	if x != nil {
		return x.InvoiceUrl
	}
	return ""
}

func (x *ProcessPaymentResponse) GetXenditInvoiceId() string {
	if x != nil {
		return x.XenditInvoiceId
	}
	return ""
}

type PaymentMethod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Method:
	//
	//	*PaymentMethod_CreditCard
	//	*PaymentMethod_BankTransfer
	//	*PaymentMethod_DigitalWallet
	Method        isPaymentMethod_Method `protobuf_oneof:"method"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentMethod) Reset() {
	*x = PaymentMethod{}
	mi := &file_payment_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod) ProtoMessage() {}

func (x *PaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod.ProtoReflect.Descriptor instead.
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{2}
}

func (x *PaymentMethod) GetMethod() isPaymentMethod_Method {
	if x != nil {
		return x.Method
	}
	return nil
}

func (x *PaymentMethod) GetCreditCard() *CreditCard {
	if x != nil {
		if x, ok := x.Method.(*PaymentMethod_CreditCard); ok {
			return x.CreditCard
		}
	}
	return nil
}

func (x *PaymentMethod) GetBankTransfer() *BankTransfer {
	if x != nil {
		if x, ok := x.Method.(*PaymentMethod_BankTransfer); ok {
			return x.BankTransfer
		}
	}
	return nil
}

func (x *PaymentMethod) GetDigitalWallet() *DigitalWallet {
	if x != nil {
		if x, ok := x.Method.(*PaymentMethod_DigitalWallet); ok {
			return x.DigitalWallet
		}
	}
	return nil
}

type isPaymentMethod_Method interface {
	isPaymentMethod_Method()
}

type PaymentMethod_CreditCard struct {
	CreditCard *CreditCard `protobuf:"bytes,1,opt,name=credit_card,json=creditCard,proto3,oneof"`
}

type PaymentMethod_BankTransfer struct {
	BankTransfer *BankTransfer `protobuf:"bytes,2,opt,name=bank_transfer,json=bankTransfer,proto3,oneof"`
}

type PaymentMethod_DigitalWallet struct {
	DigitalWallet *DigitalWallet `protobuf:"bytes,3,opt,name=digital_wallet,json=digitalWallet,proto3,oneof"`
}

func (*PaymentMethod_CreditCard) isPaymentMethod_Method() {}

func (*PaymentMethod_BankTransfer) isPaymentMethod_Method() {}

func (*PaymentMethod_DigitalWallet) isPaymentMethod_Method() {}

type CreditCard struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CardNumber     string                 `protobuf:"bytes,1,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	ExpiryMonth    string                 `protobuf:"bytes,2,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`
	ExpiryYear     string                 `protobuf:"bytes,3,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`
	Cvv            string                 `protobuf:"bytes,4,opt,name=cvv,proto3" json:"cvv,omitempty"`
	CardholderName string                 `protobuf:"bytes,5,opt,name=cardholder_name,json=cardholderName,proto3" json:"cardholder_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreditCard) Reset() {
	*x = CreditCard{}
	mi := &file_payment_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCard) ProtoMessage() {}

func (x *CreditCard) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCard.ProtoReflect.Descriptor instead.
func (*CreditCard) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreditCard) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *CreditCard) GetExpiryMonth() string {
	if x != nil {
		return x.ExpiryMonth
	}
	return ""
}

func (x *CreditCard) GetExpiryYear() string {
	if x != nil {
		return x.ExpiryYear
	}
	return ""
}

func (x *CreditCard) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *CreditCard) GetCardholderName() string {
	if x != nil {
		return x.CardholderName
	}
	return ""
}

type BankTransfer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountNumber string                 `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	RoutingNumber string                 `protobuf:"bytes,2,opt,name=routing_number,json=routingNumber,proto3" json:"routing_number,omitempty"`
	BankName      string                 `protobuf:"bytes,3,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BankTransfer) Reset() {
	*x = BankTransfer{}
	mi := &file_payment_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BankTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankTransfer) ProtoMessage() {}

func (x *BankTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankTransfer.ProtoReflect.Descriptor instead.
func (*BankTransfer) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{4}
}

func (x *BankTransfer) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *BankTransfer) GetRoutingNumber() string {
	if x != nil {
		return x.RoutingNumber
	}
	return ""
}

func (x *BankTransfer) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

type DigitalWallet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletId      string                 `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Provider      string                 `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitalWallet) Reset() {
	*x = DigitalWallet{}
	mi := &file_payment_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalWallet) ProtoMessage() {}

func (x *DigitalWallet) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalWallet.ProtoReflect.Descriptor instead.
func (*DigitalWallet) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{5}
}

func (x *DigitalWallet) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *DigitalWallet) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type ProcessRefundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PaymentId     string                 `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"` // Full or partial refund amount
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`   // Refund reason
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessRefundRequest) Reset() {
	*x = ProcessRefundRequest{}
	mi := &file_payment_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRefundRequest) ProtoMessage() {}

func (x *ProcessRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRefundRequest.ProtoReflect.Descriptor instead.
func (*ProcessRefundRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessRefundRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *ProcessRefundRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ProcessRefundRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ProcessRefundRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ProcessRefundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefundId      string                 `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // "pending", "completed", "failed"
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessRefundResponse) Reset() {
	*x = ProcessRefundResponse{}
	mi := &file_payment_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRefundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRefundResponse) ProtoMessage() {}

func (x *ProcessRefundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRefundResponse.ProtoReflect.Descriptor instead.
func (*ProcessRefundResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessRefundResponse) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *ProcessRefundResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessRefundResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MarkPaymentCompletedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PaymentId     string                 `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkPaymentCompletedRequest) Reset() {
	*x = MarkPaymentCompletedRequest{}
	mi := &file_payment_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkPaymentCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkPaymentCompletedRequest) ProtoMessage() {}

func (x *MarkPaymentCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkPaymentCompletedRequest.ProtoReflect.Descriptor instead.
func (*MarkPaymentCompletedRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{8}
}

func (x *MarkPaymentCompletedRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *MarkPaymentCompletedRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type MarkPaymentCompletedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkPaymentCompletedResponse) Reset() {
	*x = MarkPaymentCompletedResponse{}
	mi := &file_payment_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkPaymentCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkPaymentCompletedResponse) ProtoMessage() {}

func (x *MarkPaymentCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkPaymentCompletedResponse.ProtoReflect.Descriptor instead.
func (*MarkPaymentCompletedResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{9}
}

func (x *MarkPaymentCompletedResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type MarkPaymentExpiredRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PaymentId     string                 `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkPaymentExpiredRequest) Reset() {
	*x = MarkPaymentExpiredRequest{}
	mi := &file_payment_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkPaymentExpiredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkPaymentExpiredRequest) ProtoMessage() {}

func (x *MarkPaymentExpiredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkPaymentExpiredRequest.ProtoReflect.Descriptor instead.
func (*MarkPaymentExpiredRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{10}
}

func (x *MarkPaymentExpiredRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *MarkPaymentExpiredRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type MarkPaymentExpiredResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkPaymentExpiredResponse) Reset() {
	*x = MarkPaymentExpiredResponse{}
	mi := &file_payment_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkPaymentExpiredResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkPaymentExpiredResponse) ProtoMessage() {}

func (x *MarkPaymentExpiredResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkPaymentExpiredResponse.ProtoReflect.Descriptor instead.
func (*MarkPaymentExpiredResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{11}
}

func (x *MarkPaymentExpiredResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MarkPaymentExpiredResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_payment_service_proto protoreflect.FileDescriptor

const file_payment_service_proto_rawDesc = "" +
	"\n" +
	"\x15payment_service.proto\x12\torder.sv1\x1a\fcommon.proto\"\x8b\x01\n" +
	"\x15ProcessPaymentRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12?\n" +
	"\x0epayment_method\x18\x02 \x01(\v2\x18.order.sv1.PaymentMethodR\rpaymentMethod\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"\xb6\x01\n" +
	"\x16ProcessPaymentResponse\x12\x1d\n" +
	"\n" +
	"payment_id\x18\x01 \x01(\tR\tpaymentId\x120\n" +
	"\x06status\x18\x02 \x01(\x0e2\x18.order.sv1.PaymentStatusR\x06status\x12\x1f\n" +
	"\vinvoice_url\x18\x03 \x01(\tR\n" +
	"invoiceUrl\x12*\n" +
	"\x11xendit_invoice_id\x18\x04 \x01(\tR\x0fxenditInvoiceId\"\xd6\x01\n" +
	"\rPaymentMethod\x128\n" +
	"\vcredit_card\x18\x01 \x01(\v2\x15.order.sv1.CreditCardH\x00R\n" +
	"creditCard\x12>\n" +
	"\rbank_transfer\x18\x02 \x01(\v2\x17.order.sv1.BankTransferH\x00R\fbankTransfer\x12A\n" +
	"\x0edigital_wallet\x18\x03 \x01(\v2\x18.order.sv1.DigitalWalletH\x00R\rdigitalWalletB\b\n" +
	"\x06method\"\xac\x01\n" +
	"\n" +
	"CreditCard\x12\x1f\n" +
	"\vcard_number\x18\x01 \x01(\tR\n" +
	"cardNumber\x12!\n" +
	"\fexpiry_month\x18\x02 \x01(\tR\vexpiryMonth\x12\x1f\n" +
	"\vexpiry_year\x18\x03 \x01(\tR\n" +
	"expiryYear\x12\x10\n" +
	"\x03cvv\x18\x04 \x01(\tR\x03cvv\x12'\n" +
	"\x0fcardholder_name\x18\x05 \x01(\tR\x0ecardholderName\"y\n" +
	"\fBankTransfer\x12%\n" +
	"\x0eaccount_number\x18\x01 \x01(\tR\raccountNumber\x12%\n" +
	"\x0erouting_number\x18\x02 \x01(\tR\rroutingNumber\x12\x1b\n" +
	"\tbank_name\x18\x03 \x01(\tR\bbankName\"H\n" +
	"\rDigitalWallet\x12\x1b\n" +
	"\twallet_id\x18\x01 \x01(\tR\bwalletId\x12\x1a\n" +
	"\bprovider\x18\x02 \x01(\tR\bprovider\"\x80\x01\n" +
	"\x14ProcessRefundRequest\x12\x1d\n" +
	"\n" +
	"payment_id\x18\x01 \x01(\tR\tpaymentId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"f\n" +
	"\x15ProcessRefundResponse\x12\x1b\n" +
	"\trefund_id\x18\x01 \x01(\tR\brefundId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"W\n" +
	"\x1bMarkPaymentCompletedRequest\x12\x1d\n" +
	"\n" +
	"payment_id\x18\x01 \x01(\tR\tpaymentId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\".\n" +
	"\x1cMarkPaymentCompletedResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"U\n" +
	"\x19MarkPaymentExpiredRequest\x12\x1d\n" +
	"\n" +
	"payment_id\x18\x01 \x01(\tR\tpaymentId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\"P\n" +
	"\x1aMarkPaymentExpiredResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x87\x03\n" +
	"\x0ePaymentService\x12U\n" +
	"\x0eProcessPayment\x12 .order.sv1.ProcessPaymentRequest\x1a!.order.sv1.ProcessPaymentResponse\x12g\n" +
	"\x14MarkPaymentCompleted\x12&.order.sv1.MarkPaymentCompletedRequest\x1a'.order.sv1.MarkPaymentCompletedResponse\x12R\n" +
	"\rProcessRefund\x12\x1f.order.sv1.ProcessRefundRequest\x1a .order.sv1.ProcessRefundResponse\x12a\n" +
	"\x12MarkPaymentExpired\x12$.order.sv1.MarkPaymentExpiredRequest\x1a%.order.sv1.MarkPaymentExpiredResponseBSZQgithub.com/AnthonyGillesRudolfo/Order-Processing-Pipeline/gen/go/order/v1;orderpbb\x06proto3"

var (
	file_payment_service_proto_rawDescOnce sync.Once
	file_payment_service_proto_rawDescData []byte
)

func file_payment_service_proto_rawDescGZIP() []byte {
	file_payment_service_proto_rawDescOnce.Do(func() {
		file_payment_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_payment_service_proto_rawDesc), len(file_payment_service_proto_rawDesc)))
	})
	return file_payment_service_proto_rawDescData
}

var file_payment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_payment_service_proto_goTypes = []any{
	(*ProcessPaymentRequest)(nil),        // 0: order.sv1.ProcessPaymentRequest
	(*ProcessPaymentResponse)(nil),       // 1: order.sv1.ProcessPaymentResponse
	(*PaymentMethod)(nil),                // 2: order.sv1.PaymentMethod
	(*CreditCard)(nil),                   // 3: order.sv1.CreditCard
	(*BankTransfer)(nil),                 // 4: order.sv1.BankTransfer
	(*DigitalWallet)(nil),                // 5: order.sv1.DigitalWallet
	(*ProcessRefundRequest)(nil),         // 6: order.sv1.ProcessRefundRequest
	(*ProcessRefundResponse)(nil),        // 7: order.sv1.ProcessRefundResponse
	(*MarkPaymentCompletedRequest)(nil),  // 8: order.sv1.MarkPaymentCompletedRequest
	(*MarkPaymentCompletedResponse)(nil), // 9: order.sv1.MarkPaymentCompletedResponse
	(*MarkPaymentExpiredRequest)(nil),    // 10: order.sv1.MarkPaymentExpiredRequest
	(*MarkPaymentExpiredResponse)(nil),   // 11: order.sv1.MarkPaymentExpiredResponse
	(PaymentStatus)(0),                   // 12: order.sv1.PaymentStatus
}
var file_payment_service_proto_depIdxs = []int32{
	2,  // 0: order.sv1.ProcessPaymentRequest.payment_method:type_name -> order.sv1.PaymentMethod
	12, // 1: order.sv1.ProcessPaymentResponse.status:type_name -> order.sv1.PaymentStatus
	3,  // 2: order.sv1.PaymentMethod.credit_card:type_name -> order.sv1.CreditCard
	4,  // 3: order.sv1.PaymentMethod.bank_transfer:type_name -> order.sv1.BankTransfer
	5,  // 4: order.sv1.PaymentMethod.digital_wallet:type_name -> order.sv1.DigitalWallet
	0,  // 5: order.sv1.PaymentService.ProcessPayment:input_type -> order.sv1.ProcessPaymentRequest
	8,  // 6: order.sv1.PaymentService.MarkPaymentCompleted:input_type -> order.sv1.MarkPaymentCompletedRequest
	6,  // 7: order.sv1.PaymentService.ProcessRefund:input_type -> order.sv1.ProcessRefundRequest
	10, // 8: order.sv1.PaymentService.MarkPaymentExpired:input_type -> order.sv1.MarkPaymentExpiredRequest
	1,  // 9: order.sv1.PaymentService.ProcessPayment:output_type -> order.sv1.ProcessPaymentResponse
	9,  // 10: order.sv1.PaymentService.MarkPaymentCompleted:output_type -> order.sv1.MarkPaymentCompletedResponse
	7,  // 11: order.sv1.PaymentService.ProcessRefund:output_type -> order.sv1.ProcessRefundResponse
	11, // 12: order.sv1.PaymentService.MarkPaymentExpired:output_type -> order.sv1.MarkPaymentExpiredResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_payment_service_proto_init() }
func file_payment_service_proto_init() {
	if File_payment_service_proto != nil {
		return
	}
	file_common_proto_init()
	file_payment_service_proto_msgTypes[2].OneofWrappers = []any{
		(*PaymentMethod_CreditCard)(nil),
		(*PaymentMethod_BankTransfer)(nil),
		(*PaymentMethod_DigitalWallet)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_payment_service_proto_rawDesc), len(file_payment_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payment_service_proto_goTypes,
		DependencyIndexes: file_payment_service_proto_depIdxs,
		MessageInfos:      file_payment_service_proto_msgTypes,
	}.Build()
	File_payment_service_proto = out.File
	file_payment_service_proto_goTypes = nil
	file_payment_service_proto_depIdxs = nil
}
