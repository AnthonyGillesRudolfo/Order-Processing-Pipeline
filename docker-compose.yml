# version: "3.8"
services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:29093

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      # ðŸ‘‡ If your Kafka is running on your local machine (not another container)
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: host.docker.internal:9092
    depends_on:
      - kafka

  restate:
    image: restatedev/restate:latest
    container_name: restate
    ports:
      - "8080:8080"   # Restate Runtime API (invoke/bind services)
      - "9070:9070"   # Admin/Console API
    restart: unless-stopped

    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8080 && nc -z localhost 9070"]
      interval: 10s
      timeout: 3s
      retries: 10


  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
